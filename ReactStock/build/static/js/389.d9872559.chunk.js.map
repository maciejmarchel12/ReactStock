{"version":3,"file":"static/js/389.d9872559.chunk.js","mappings":"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","sources":["pages/loginPage.js","../node_modules/@mui/system/esm/createBox.js","../node_modules/@mui/material/Box/boxClasses.js","../node_modules/@mui/material/Box/Box.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { Navigate, useLocation } from \"react-router-dom\";\r\nimport { AuthContext } from '../contexts/authContext';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Typography, TextField, Button, Box, Snackbar } from \"@mui/material\";\r\nimport { useTheme } from '../contexts/themeContext';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nconst CustomTextField = styled(TextField)(({ theme }) => ({\r\n  '& .MuiInputLabel-root.Mui-focused': {\r\n    borderColor: theme.palette.outline.main\r\n  },\r\n\r\n  '& .MuiOutlinedInput-root:hover .MuiOutlinedInput-notchedOutline': {\r\n    borderColor: theme.palette.outline.main\r\n  },\r\n  '& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n    borderColor: theme.palette.outline.main\r\n  },\r\n  backgroundColor: theme.palette.field.main\r\n}));\r\n\r\nconst LoginPage = () => {\r\n    const context = useContext(AuthContext);\r\n    const [userName, setUserName] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [error, setError] = useState(null);\r\n    const location = useLocation();\r\n    const { from } = location.state || { from: { pathname: \"/\" } };\r\n    const theme = useTheme();\r\n\r\n    const login = async () => {\r\n        try {\r\n            await context.authenticate(userName, password);\r\n        } catch (error) {\r\n            setError(error.message || \"An error occurred during login.\");\r\n            setUserName(\"\"); // Clear input fields on error\r\n            setPassword(\"\"); // Clear input fields on error\r\n        }\r\n    };\r\n\r\n    const handleCloseError = () => {\r\n        setError(null);\r\n    };\r\n\r\n    if (context.isAuthenticated) {\r\n        return <Navigate to={from} />;\r\n    }\r\n\r\n    return (\r\n        <div style={{ backgroundColor: theme.palette.background.bkg, minHeight: '100vh', display: 'flex', flexDirection: 'column' }}>\r\n            <Container component=\"main\" maxWidth=\"xs\" sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', mt: 8, paddingTop: 20 }}>\r\n                <Typography component=\"h2\" variant=\"h5\">\r\n                    Login page\r\n                </Typography>\r\n                <Box component=\"form\" sx={{ mt: 1 }}>\r\n                    <CustomTextField\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"username\"\r\n                        label=\"Username\"\r\n                        name=\"username\"\r\n                        autoComplete=\"username\"\r\n                        autoFocus\r\n                        value={userName}\r\n                        onChange={e => setUserName(e.target.value)}\r\n                        theme={theme}\r\n                    />\r\n                    <CustomTextField\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        value={password}\r\n                        onChange={e => setPassword(e.target.value)}\r\n                        theme={theme}\r\n                    />\r\n                    <Button\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        style={{ backgroundColor: theme.palette.primary.main }}\r\n                        onClick={login}\r\n                    >\r\n                        Log in\r\n                    </Button>\r\n                </Box>\r\n                <Snackbar\r\n                    open={!!error}\r\n                    autoHideDuration={6000}\r\n                    onClose={handleCloseError}\r\n                    message={error}\r\n                />\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginPage;\r\n","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport styled from '@mui/styled-engine';\nimport styleFunctionSx, { extendSxProp } from './styleFunctionSx';\nimport useTheme from './useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function createBox(options = {}) {\n  const {\n    themeId,\n    defaultTheme,\n    defaultClassName = 'MuiBox-root',\n    generateClassName\n  } = options;\n  const BoxRoot = styled('div', {\n    shouldForwardProp: prop => prop !== 'theme' && prop !== 'sx' && prop !== 'as'\n  })(styleFunctionSx);\n  const Box = /*#__PURE__*/React.forwardRef(function Box(inProps, ref) {\n    const theme = useTheme(defaultTheme);\n    const _extendSxProp = extendSxProp(inProps),\n      {\n        className,\n        component = 'div'\n      } = _extendSxProp,\n      other = _objectWithoutPropertiesLoose(_extendSxProp, _excluded);\n    return /*#__PURE__*/_jsx(BoxRoot, _extends({\n      as: component,\n      ref: ref,\n      className: clsx(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),\n      theme: themeId ? theme[themeId] || theme : theme\n    }, other));\n  });\n  return Box;\n}","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nconst boxClasses = generateUtilityClasses('MuiBox', ['root']);\nexport default boxClasses;","'use client';\n\nimport { createBox } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from '../className';\nimport { createTheme } from '../styles';\nimport THEME_ID from '../styles/identifier';\nimport boxClasses from './boxClasses';\nconst defaultTheme = createTheme();\nconst Box = createBox({\n  themeId: THEME_ID,\n  defaultTheme,\n  defaultClassName: boxClasses.root,\n  generateClassName: ClassNameGenerator.generate\n});\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;"],"names":["CustomTextField","styled","TextField","_ref","theme","borderColor","palette","outline","main","backgroundColor","field","LoginPage","context","useContext","AuthContext","userName","setUserName","useState","password","setPassword","error","setError","location","useLocation","from","state","pathname","useTheme","isAuthenticated","_jsx","Navigate","to","style","background","bkg","minHeight","display","flexDirection","children","_jsxs","Container","component","maxWidth","sx","alignItems","mt","paddingTop","Typography","variant","Box","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","value","onChange","e","target","type","Button","primary","onClick","async","authenticate","message","Snackbar","open","autoHideDuration","onClose","handleCloseError","_excluded","generateUtilityClasses","defaultTheme","createTheme","options","arguments","length","undefined","themeId","defaultClassName","generateClassName","BoxRoot","shouldForwardProp","prop","styleFunctionSx","React","inProps","ref","_extendSxProp","extendSxProp","className","other","_objectWithoutPropertiesLoose","_extends","as","clsx","createBox","THEME_ID","boxClasses","root","ClassNameGenerator","generate"],"sourceRoot":""}